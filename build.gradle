plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'java'
	id 'com.bmuschko.docker-remote-api' version '7.3.0'
	id 'com.bmuschko.docker-spring-boot-application' version '7.3.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.3")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-config-server'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}
import com.bmuschko.gradle.docker.tasks.container.*;
import com.bmuschko.gradle.docker.tasks.image.*;

task removeContainer(type: DockerRemoveContainer){
	force = true
	containerId = 'cloud-config'
	onError(ex -> print ex.getMessage())
}

task removeImage(type: DockerRemoveImage){
	dependsOn removeContainer
	force = true
	targetImageId('bobrenok/cloud-config')
	onError(ex -> print ex.getMessage())
}

docker {
	dockerBuildImage {
		dependsOn removeImage
		dockerFile = null
		images = ['bobrenok/cloud-config']
	}
}

task("recreate"){
	group 'docker'
	dependsOn dockerBuildImage
}
tasks.named('test') {
	useJUnitPlatform()
}
